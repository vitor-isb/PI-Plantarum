/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import java.awt.HeadlessException;
import java.sql.SQLException;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import javax.swing.JFormattedTextField;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import model.Vendedor;
import model.VendedorDAO;
import services.DB;
/**
 *
 * @author Dario
 */
public class GerarOrcamento extends javax.swing.JFrame {

    private int produtos=0;
    private double total=0;
    private Vendedor vorcamento;
    private DB bd = new DB();
    private final int GAP = 12;
    
    public void updateTotal(){
        total=0;
        for(int i = 0;i <Tabela.getRowCount(); i++){
            double preco = Double.parseDouble(Tabela.getValueAt(i, 2).toString());
            int qtd = Integer.parseInt(Tabela.getValueAt(i, 3).toString());
            total += preco * qtd;
        }
//        System.out.println(""+(double) Tabela.getValueAt(0, 3));
        lblPrecoTotal.setText(""+total);
    }
    
    public void addProduto(int cod, String nome, float preco, int qtd){
        //--------------------------------------criar vetor de labels para o código de cada produto
        //criar vetor com todos os itens do painel para depois criar vetor de paineis com os itens dentro
        DefaultTableModel model = (DefaultTableModel) Tabela.getModel();
        Object[] linha = new Object[4];
        linha[0] = cod;
        linha[1] = nome;
        linha[2] = preco;
        linha[3] = qtd;
        model.addRow(linha);
        updateTotal();
    }
    
    public void setValues(){
        bd.getConnection();
        String sql = "Select cod_vendedor from vendedor";
        try{
            bd.st = bd.con.prepareStatement(sql);
            bd.rs = bd.st.executeQuery();
            while(bd.rs.next()){
                cbVendedor.addItem(bd.rs.getString(1));
            }
        }catch(SQLException e){
            System.out.println(e.toString());
        }
        sql = "select cod_cliente from cliente";
        try{
            bd.st = bd.con.prepareStatement(sql);
            bd.rs = bd.st.executeQuery();
            while(bd.rs.next()){
                cbCliente.addItem(bd.rs.getString(1));
            }
        }catch(SQLException e){
            System.out.println(e.toString());
        }
        bd.close();
    }
    
    public GerarOrcamento(){
        initComponents();
        setValues();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        detalheorcamento = new javax.swing.JPanel();
        chkVenda = new javax.swing.JCheckBox();
        lblorcamento = new javax.swing.JLabel();
        cbVendedor = new javax.swing.JComboBox<>();
        cbCliente = new javax.swing.JComboBox<>();
        chkVendedor = new javax.swing.JCheckBox();
        chkCliente = new javax.swing.JCheckBox();
        lblselecionar = new javax.swing.JLabel();
        lblPrecoTotal = new javax.swing.JLabel();
        btnSalvar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        Tabela = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        detalheorcamento.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        chkVenda.setText("Venda");

        lblorcamento.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblorcamento.setText("Orçamento total");
        lblorcamento.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        cbVendedor.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Vendedor" }));
        cbVendedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbVendedorActionPerformed(evt);
            }
        });

        cbCliente.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Cliente" }));
        cbCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbClienteActionPerformed(evt);
            }
        });

        chkVendedor.setText("Vendedor");
        chkVendedor.setEnabled(false);
        chkVendedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkVendedorActionPerformed(evt);
            }
        });

        chkCliente.setText("Cliente");
        chkCliente.setEnabled(false);
        chkCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkClienteActionPerformed(evt);
            }
        });

        lblselecionar.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblselecionar.setText("Selecionar");
        lblselecionar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        lblPrecoTotal.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblPrecoTotal.setText("0");
        lblPrecoTotal.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        btnSalvar.setText("Salvar");
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout detalheorcamentoLayout = new javax.swing.GroupLayout(detalheorcamento);
        detalheorcamento.setLayout(detalheorcamentoLayout);
        detalheorcamentoLayout.setHorizontalGroup(
            detalheorcamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblselecionar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(lblPrecoTotal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(detalheorcamentoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(detalheorcamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(detalheorcamentoLayout.createSequentialGroup()
                        .addGroup(detalheorcamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(chkVendedor, javax.swing.GroupLayout.DEFAULT_SIZE, 85, Short.MAX_VALUE)
                            .addComponent(cbVendedor, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(detalheorcamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cbCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(chkCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, detalheorcamentoLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(lblorcamento, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addGroup(detalheorcamentoLayout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addComponent(chkVenda)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnSalvar)
                .addGap(44, 44, 44))
        );
        detalheorcamentoLayout.setVerticalGroup(
            detalheorcamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(detalheorcamentoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblselecionar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(detalheorcamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbVendedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(detalheorcamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chkVendedor)
                    .addComponent(chkCliente))
                .addGap(49, 49, 49)
                .addComponent(lblorcamento)
                .addGap(41, 41, 41)
                .addComponent(lblPrecoTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(69, 69, 69)
                .addGroup(detalheorcamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chkVenda)
                    .addComponent(btnSalvar))
                .addContainerGap(26, Short.MAX_VALUE))
        );

        Tabela.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo", "Planta", "Preco", "Quantidade"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Tabela.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                TabelaFocusLost(evt);
            }
        });
        Tabela.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                TabelaKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(Tabela);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 440, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(detalheorcamento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(detalheorcamento, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void chkVendedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkVendedorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chkVendedorActionPerformed

    private void chkClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkClienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chkClienteActionPerformed

    private void cbVendedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbVendedorActionPerformed
        // TODO add your handling code here:
        if(cbVendedor.getSelectedItem()!= "Vendedor"){
            chkVendedor.setSelected(true);
        }else{chkVendedor.setSelected(false);}
    }//GEN-LAST:event_cbVendedorActionPerformed

    private void cbClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbClienteActionPerformed
        // TODO add your handling code here:
        if(cbCliente.getSelectedItem()!= "Cliente"){
            chkCliente.setSelected(true);
        }else{chkCliente.setSelected(false);}
    }//GEN-LAST:event_cbClienteActionPerformed

    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed
        // TODO add your handling code here:
        if(chkVendedor.isSelected() && chkCliente.isSelected()){
            String data = DateTimeFormatter.ofPattern("dd/MM/yyy").format(LocalDate.now());
            bd.getConnection();
            int linhas = Tabela.getRowCount();
            int venda=0;
            int idorcamento=1;
            if(chkVenda.isSelected()){
                venda =1;
            }
            
            String sql = "INSERT INTO [dbo].[orcamento] ([data_orcamento],"
                    + "[fk_vendedor], [fk_cliente], [venda])"
                    + "VALUES (?, ?, ?, ?)";
            try{
                bd.st = bd.con.prepareStatement(sql);
                bd.st.setString(1, data);
                bd.st.setInt(2, Integer.parseInt(cbVendedor.getSelectedItem().toString()));
                bd.st.setInt(3, Integer.parseInt(cbCliente.getSelectedItem().toString()));
                bd.st.setInt(4, venda);
                bd.st.executeUpdate();
                //pegar id do código do orçamento gerado
                bd.st = bd.con.prepareStatement("SELECT [cod_orcamento] FROM [dbo].[orcamento]");
                bd.rs = bd.st.executeQuery();
                while(bd.rs.next()){
                    if(bd.rs.getInt(1)>idorcamento)
                        idorcamento = bd.rs.getInt(1);
                }
                System.out.println("até aqui tá ok1");
                sql = "INSERT INTO [dbo].[item_orcamento] ([compra_iorcamento], "
                    + "[qtdprod_iorcamento], [fk_orcamento], [fk_planta], [preco_iorcamento])\n" +
                    "VALUES (?, ?, ?, ?, ?)";
                    for(int i = 0; i < linhas; i++){
                        bd.st = bd.con.prepareStatement(sql);
                        bd.st.setInt(1, venda);
                        bd.st.setInt(2, Integer.parseInt(Tabela.getValueAt(i, 3).toString()));
                        bd.st.setInt(3, idorcamento);
                        bd.st.setInt(4, Integer.parseInt(Tabela.getValueAt(i, 0).toString()));
                        bd.st.setFloat(5, Float.parseFloat(Tabela.getValueAt(i, 2).toString()));
                        bd.st.executeUpdate();
                    }
                    if(chkVenda.isSelected()){
                        sql = "UPDATE [dbo].[estoque] SET [qtdestoque_planta] = [qtdestoque_planta]-? "
                                + "WHERE [cod_planta] = ?";
                        DefaultTableModel model = (DefaultTableModel) Tabela.getModel();
                        for(int i = 0; i<Tabela.getRowCount(); i++){
                            bd.st = bd.con.prepareStatement(sql);
                            bd.st.setInt(1, Integer.parseInt(Tabela.getValueAt(i, 3).toString()));
                            bd.st.setInt(2, Integer.parseInt(Tabela.getValueAt(i, 0).toString()));
                            bd.st.executeUpdate();
                        }
                    }
                    JOptionPane.showMessageDialog(null, "Sucesso");
                }catch(SQLException | HeadlessException | NumberFormatException e){
                    System.out.println(e.toString());
                    JOptionPane.showMessageDialog(null,e.toString());
                }
                finally{bd.close();}
                     
        }else{JOptionPane.showMessageDialog(null, "Selecione um vendedor e um cliente para salvar o orcamento");}
    }//GEN-LAST:event_btnSalvarActionPerformed

    private void TabelaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_TabelaFocusLost
        // TODO add your handling code here:
        updateTotal();
    }//GEN-LAST:event_TabelaFocusLost

    private void TabelaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TabelaKeyReleased
        // TODO add your handling code here:
        updateTotal();
    }//GEN-LAST:event_TabelaKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GerarOrcamento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GerarOrcamento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GerarOrcamento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GerarOrcamento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GerarOrcamento().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JTable Tabela;
    private javax.swing.JButton btnSalvar;
    private javax.swing.JComboBox<String> cbCliente;
    private javax.swing.JComboBox<String> cbVendedor;
    private javax.swing.JCheckBox chkCliente;
    private javax.swing.JCheckBox chkVenda;
    private javax.swing.JCheckBox chkVendedor;
    private javax.swing.JPanel detalheorcamento;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblPrecoTotal;
    private javax.swing.JLabel lblorcamento;
    private javax.swing.JLabel lblselecionar;
    // End of variables declaration//GEN-END:variables
}
